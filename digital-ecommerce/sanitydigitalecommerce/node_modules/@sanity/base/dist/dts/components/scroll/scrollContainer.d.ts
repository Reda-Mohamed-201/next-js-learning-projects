import React from 'react';
export interface ScrollContainerProps<T extends React.ElementType> extends Omit<React.HTMLProps<T>, 'as' | 'onScroll'> {
    as?: React.ElementType | keyof JSX.IntrinsicElements;
    onScroll?: (event: Event) => () => void;
}
/**
 * This provides a utility function for use within Sanity Studios to create scrollable containers
 * It also provides a way for components inside a scrollable container to track onScroll on their first parent scroll container
 * Note: this is used by different studio utilities to track positions of elements on screen
 * Note: It will call any given `onScroll` callback with a Native DOM Event, and not a React Synthetic event
 * Note: It will not make sure the element is actually scrollable, this still needs to be done with css as usual
 */
export declare const ScrollContainer: React.ForwardRefExoticComponent<Omit<ScrollContainerProps<React.ElementType<any>>, "ref"> & React.RefAttributes<unknown>>;
//# sourceMappingURL=scrollContainer.d.ts.map