import React from 'react';
declare type Item = unknown;
declare type Value = any;
interface StatelessSearchableSelectProps {
    onChange?: (item: Item) => void;
    value?: Value;
    inputValue?: string;
    onInputChange?: (val: string) => void;
    onClear?: () => void;
    renderItem: (item: Item) => React.ReactNode;
    placeholder?: string;
    isLoading?: boolean;
    isOpen?: boolean;
    onOpen?: () => void;
    onClose?: (event?: Event) => void;
    openItemElement?: (value: Value) => React.ReactNode;
    items?: Item[];
    highlightIndex?: number;
    onHighlightIndexChange?: (index: number) => void;
    isInputSelected?: boolean;
    disabled?: boolean;
    dropdownPosition?: string;
    readOnly?: boolean;
    inputId?: string;
}
declare const StatelessSearchableSelect: React.ForwardRefExoticComponent<Omit<StatelessSearchableSelectProps & React.HTMLProps<HTMLInputElement>, "ref"> & React.RefAttributes<unknown>>;
export default StatelessSearchableSelect;
//# sourceMappingURL=StatelessSearchableSelect.d.ts.map